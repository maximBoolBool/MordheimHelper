// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserEntities;

#nullable disable

namespace UserEntities.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20240303180721_InitialMigrate")]
    partial class InitialMigrate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserEntities.Entities.BandEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CurrentPointCost")
                        .HasColumnType("integer")
                        .HasColumnName("current_point_cost");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<int>("MaxPointCost")
                        .HasColumnType("integer")
                        .HasColumnName("max_point_cost");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RuleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rule_id");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("bands");
                });

            modelBuilder.Entity("UserEntities.Entities.UnitEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<List<string>>("ArmorsRuleIds")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("armors_rule_ids");

                    b.Property<long>("BandId")
                        .HasColumnType("bigint")
                        .HasColumnName("band_id");

                    b.Property<string>("CloseCombatWeaponRuleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("close_combat_weapon_rule_id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("ModelRuleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model_rule_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("RangeWeaponRuleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("range_weapon_rule_id");

                    b.HasKey("Id");

                    b.HasIndex("BandId");

                    b.ToTable("untis");
                });

            modelBuilder.Entity("UserEntities.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("UserEntities.Entities.BandEntity", b =>
                {
                    b.HasOne("UserEntities.Entities.UserEntity", "User")
                        .WithMany("Bands")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserEntities.Entities.UnitEntity", b =>
                {
                    b.HasOne("UserEntities.Entities.BandEntity", "Band")
                        .WithMany()
                        .HasForeignKey("BandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");
                });

            modelBuilder.Entity("UserEntities.Entities.UserEntity", b =>
                {
                    b.Navigation("Bands");
                });
#pragma warning restore 612, 618
        }
    }
}
